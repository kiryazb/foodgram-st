services:

  frontend:
    container_name: foodgram-front
    image: kiryazb/foodgram-frontend:latest  # Используем образ из Docker Hub
    restart: always

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - media_volume:/usr/share/nginx/html/media/
    depends_on:
      - backend

  db:
    container_name: foodgram-db
    image: postgres:13
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      retries: 5
      timeout: 3s

  backend:
    container_name: foodgram-backend
    image: kiryazb/foodgram-backend:latest  # Используем образ из Docker Hub
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - media_volume:/app/foodgram/media

volumes:
  pg_data:
  media_volume:
